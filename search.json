[{"path":"https://livingingroups.github.io/cocomo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ariana Strandburg-Peshkin. Maintainer.","code":""},{"path":"https://livingingroups.github.io/cocomo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Strandburg-Peshkin , Department EoAS, Behavior MPIoA (2025). cocomo: Communication Collective Movement Package. R package version 0.1.0, https://livingingroups.github.io/cocomo/.","code":"@Manual{,   title = {cocomo: Communication and Collective Movement Package},   author = {Ariana Strandburg-Peshkin and Ecology of Animal Societies Department and Max Planck Institute of Animal Behavior},   year = {2025},   note = {R package version 0.1.0},   url = {https://livingingroups.github.io/cocomo/}, }"},{"path":[]},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Communication and Collective Movement Package","text":"library contains functions used Communication Collective Movement (CoCoMo) group others Department Ecology Animal Societies Max Planck Institute Animal Behavior analyze simultaneous tracking data animal groups. package maintained Ari Strandburg-Peshkin. package currently early development, accuracy definitely guaranteed - use caution!","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Communication and Collective Movement Package","text":"can install package first installing devtools library, running: library(devtools) install_github('livingingroups/cocomo')","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"dataset-structure","dir":"","previous_headings":"","what":"Dataset structure","title":"Communication and Collective Movement Package","text":"library built movement (typically GPS) datasets standardized “matrix format”, containing following objects: xs: matrix x coordinates (UTM eastings) individuals group population (rows) every time point (columns) xs[,t] gives x / easting position individual time point t ys: matrix y coordinates (UTM northings) individuals group population (rows) every time point (columns) ys[,t] gives y / northing position individual time point t timestamps: vector timestamps corresponding columns xs ys matrices. Timestamps must uniformly sampled, though possible gaps (e.g. different days recording) ids: data frame giving information tracked individuals, rows correpsonding rows xs ys matrices. must one column called id_code contains unique individual identifier animal (e.g. meerkats: 'VCVM001', hyenas: 'WRTH', coatis: 'Luna') columns contained flexible, can include information age, sex, dominance, etc. functions also take time series calls. formatted data frame includes, minimum, following columns: ind_idx: index individual making call (numeric) time_idx: time index closest time call produced call_type: string specifying call type label time: exact time call produced (synched UTC time, including fractions second) Note times generally UTC, however functions also work local time. user verify time zone used GPS audio data.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"specific-datasets","dir":"","previous_headings":"","what":"Specific datasets","title":"Communication and Collective Movement Package","text":"functions package intended general, also contains functions used processing data specific species datasets maintained CoCoMo group / EAS department. functions may also interface file structure EAS data server. functions species-specific begin species name, e.g. meerkat_import_GPS_data. addition, species-specific scripts scripts folder.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"code-review","dir":"","previous_headings":"","what":"Code review","title":"Communication and Collective Movement Package","text":"eventual goal functions package code reviewed least one person person wrote code. Code reviewers credited function documentation “Author(s)” (indicated code reviewers). Functions yet code reviewed specify “YET CODE REVIEWED” “Author(s)” documentation. time writing, functions yet code reviewed. like contribute package code revieweing functions, please contact Ari.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Communication and Collective Movement Package","text":"like contribute code library, please submit pull request, contact Ari.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"licensing","dir":"","previous_headings":"","what":"Licensing","title":"Communication and Collective Movement Package","text":"package distributed GNU GPLv3 license. Basically, can almost anything want , except distribute closed-source versions. See COPYING.txt full license.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Communication and Collective Movement Package","text":"Please cite package use : cite('cocomo')","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"style-guidelines","dir":"","previous_headings":"","what":"Style guidelines","title":"Communication and Collective Movement Package","text":"facilitate code review consistency within package, minimal code style guidelines. required, recommended.","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"required","dir":"","previous_headings":"Style guidelines","what":"Required","title":"Communication and Collective Movement Package","text":"Code must indented according standard practice (e.g. code within loop indented) Code must commented reader can tell Functions must contain documentation Roxygen format (see existing functions examples) function must indicate primary author, well code reviewer (, code reviewer, indicate YET CODE REVIEWED) Variable function names use underscores_between_words rather periods..words CamelCase. using functions packages, use @importFrom top import specific functions rather whole package using functions packages, call code using package name, e.g. cocomo::get_group_heading rather just get_group_heading","code":""},{"path":"https://livingingroups.github.io/cocomo/index.html","id":"recommended","dir":"","previous_headings":"Style guidelines","what":"Recommended","title":"Communication and Collective Movement Package","text":"Function names start verb (e.g. get_group_heading) distinguish variables possible, avoid using lots external packages Avoid tidyverse possible (sorry, offense intended!). Edit: just informed stringr lubridate part tidyverse, apparently following recommendation closely. generally use US rather British spellings words","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze split or merge event — analyze_split_or_merge_event","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"Analyze (, make_plot=T make visualization ) fission-fusion event.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"","code":"analyze_split_or_merge_event(   events,   i,   xs,   ys,   timestamps,   max_time = 600,   thresh_h = 50,   thresh_l = 15,   depart_or_arrive_radius = 15,   time_window = 300,   seconds_per_time_step = 1,   breaks = NULL,   break_by_day = F,   make_plot = T )"},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"events data frame fission-fusion events, output identify_splits_and_merges index row use events table xs n_inds x n_times matrix x coordinates ys n_inds x n_times matrix y coordinates timestamps vector timestamps length n_times datetime format max_time maximum time steps forward back look start end event (units timesteps, seconds) thresh_h upper threshold determining subgroups \"apart\" (default 50) thresh_l lower threshold determining subgroups \"together\" (default 15) depart_or_arrive_radius threshold determining individual departed (fissions) arrived (fusions) group, used computing departure/arrival times headings time_window time steps move backward forward time identify times (units timesteps, seconds) seconds_per_time_step seconds per time step (default 1) breaks indexes breaks data (default NULL treats data contiguous sequence). specified, overrides break_by_day break_by_day whether break data date (T F) make_plot whether plot event (T) (F)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"Returns list () information extracted event, well plot (make_plot = T). list contains: start_time: start time index end_time: end time index before_time: time index after_time: time index disps: matrix displacements different subgroups (rows) different time intervals (columns). Rows columns named easy access. speeds: format disps matrix, speeds, m / s split_angle: split angle degrees, description turn_angle_A: turning angle subgroup degrees, description turn_angle_B: turn angle subgroup B degrees, description depart_or_arrive_times: vector departure (fission) arrival (fusion) times individual big_group_idxs (original events table) depart_or_arrive_headings: vector departure (fission) arrival (fusion) headings individual big_group_idxs (original events table) depart_or_arrive_time_diff: difference mean departure (fission) arrival (fusion) time across two subgroups depart_or_arrive_heading_diff: difference mean vector departure (fission) arrival (fusion) heading across two subgroups plot shows (top) dyadic distance time lines showing identified times (bottom) visualization trajectories two subgroups.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"function takes information fission fusion event well tracking data identify relevant time points fission fusion event compute relevant metrics event. First, start_time end_time event determined based double threshold method, before_time after_time identified. identifies 3 phases event: (before_time:start_time), (start_time:end_time) (end_time:after_time). Finally displacements speeds subgroups phases various relevant angles calculated. details given . Note function can consider events involving 2 subgroups.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"additional-details","dir":"Reference","previous_headings":"","what":"Additional details","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"start end time identified? start, look window time around identified event (can manually automatically identified). size window determined parameter 'max_time', go (tidx - max_time):(tidx + max_time) tidx identified event time index. Within window, compute distance centroids two subgroups splitting merging time point. use double threshold method determine start end point fission fusion event within time window. , first categorize time points higher threshold thresh_h (2), two thresholds (1), lower threshold thresh_l (0). identify contiguous periods time dyadic distance went 2-111111(number ones)-0 (.e. high-mid-low) fusion 0-1111...-2 (.e. low-mid-high) fission. multiple possible time periods detected within window, choose one start time closest tidx. (See also subtlety 1 ). times identified? time defined time point tidx - time_window (default time_window = 300 time steps), unless two groups sufficiently together (fission) apart (fusion) time. latter, before_time identified point just two subgroups cross threshold thresh_m midway upper lower thresholds used define start end times (.e. usually (thresh_l + thresh_h) / 2, though upper lower thresholds get modified due subtlety 1 , also modify thresh_m accordingly). logic , fusion looking full group (combination two eventual subgroups) began split. However, want point fall prior fusion event, require centroids two subgroups less (thresh_l + thresh_h) / 2 distance apart. time defined analogous way, using time period event. usually set tidx + time_window, unless subgroups come back close together (fission) go far apart (fusion). , use time just prior crossing midway point two thresholds after_time, threshold crossed time_window seconds elapsed. displacements defined? compute displacement centroid subgroup (group group B) well displacement centroid combined group (group AB) time windows: (before_time:start_time), (start_time:end_time) (end_time:after_time). angles defined? define 3 relevant angles relevant fission event (might define later merge events): split_angle: angle two groups split. defined angle traced points p_A(end_time), p_AB(start_time), p_B(end_time) p_A(t) position subgroup 's centroid time t likewise subgroup B combined group. turn_angle_A: turning angle subgroup . defined angle formed points p_AB(before_time), p_AB(start_time), p_A(end_time) turn_angle_B: likewise subgroup B Note angles use point p_AB(start_time) central point departure time difference departure angular difference calculated? calculate departure time difference angular difference, start computing centroid full group event start time - call group start position. determine, individual subgroup, departure time defined first time start time individual crossed threshold distance (depart_or_arrive_radius) start position. compute departure heading individual vector pointing group start position position individual departure time. computed departure times departure headings individual, compute aggregated metric disagreement times headings entire event. departure time, calculate time disagreement absolute difference mean departure_time subgroup. Similarly, departure heading, calculate directional disagreement angle (vector) mean heading subgroup. angle vectors defined 0 pi radians. time difference defined seconds. can equivalent calculations fusion events. , define group end position centroid combined group end_time, use position reference point calculations. Looking backward time, find arrival time individual, defined latest time end time individual remained outside threshold distance depart_or_arrive_radius. headings time differences computed , differences times angles well. avoid different column names variables code, create columns: group_start_or_end_position defined group start position fission group end position fusion, depart_or_arrive_times list departure times (case fissions) arrival times (case fusions), depart_or_arrive_headings lsit departure headings (case fissions) arrival headings (case fusions), depart_or_arrive_time_diff single number representing time disagreement departure (fissions) arrival (fusions) times, depart_or_arrive_heading_diff single number representing directional disagreement departure (fissions) arrival (fusions) headings. SUBTLETIES: Subtlety 1: Sometimes, due multi-scale nature events fact approximating subgroup locations centroids, dyadic distance go lower threshold thresh_l /upper threshold thresh_h. case, still try identify start_time end_time, modify thresholds follows: First, define period tidx - max_time tidx prior period, period tidx  tidx + max_time subsequent period, period (tidx - max_time/2) (tidx + max_time/2) middle period. fission, dyadic distance go thresh_h subsequent period, instead replace thresh_h maximum - .001 dyadic distance time period. Second, dyadic distance middle period drop thresh_l, instead move thresh_l minimum + .001 dyadic distance middle period. fusion, everything reversed. dyadic distance go thresh_h prior period, replace thresh_h maximum - .001 dyadic distance subsequent period. dyadic distance go thresh_l middle period, replace thresh_l minimum + .001 dyadic distance middle period. rare cases, due rules upper bound may get changed something original thresh_l, lower bound may get changed something original thresh_h. case, revert original thresholds. Subtlety 2: NA handling. NAs handled couple different ways: finding start_time end_time, NAs essentially ignored, part sequence start_time:end_time (least terms ) dyadic distance... individuals can drop just excluded centroid calculation. start end times found, nothing else computed (output values filled NAs NULL matrices). finding before_time after_time, NA hit forward backward direction, before_time (respectively, after_time) marked NA. Metrics involving time point can computed also set NA. start_time end_time different data chunks (specified breaks), given NA. before_time start_time, after_time end_time, different data chunks (specified breaks), given NA. before_time after_time NA, metrics stemming times get NA","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/analyze_split_or_merge_event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze split or merge event — analyze_split_or_merge_event","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"function creates KML file can loaded Google Earth Pro view trajectories group time.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"","code":"create_trajectories_kml(   lons,   lats,   timestamps,   id_codes,   t0,   tf,   output_file_path,   step = 1,   cols = NULL,   icons = NULL,   fixed_locs = NULL,   fixed_locs_icons = NULL,   calls = NULL,   calls_icons = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"lons N x n_times matrix giving longitude coordinates individual time lats N x n_times matrix giving latitutde coordinates individual time timestamps vector timestamps (assumed UTC) length n_times id_codes vector character string specifying id codes animal plotted t0 time index start tf time index end output_file_path full path output file character string (must end .kml) step time resolution (time steps) cols vector length N giving colors individual, e.g. 'ffed8031' (first two elements give transparency, last 6 color specified hex). NULL, trajectories white. icons vector length N specifying icons (information ) fixed_locs data frame lon lat coordinates fixed locations label (e.g. dens) - must columns 'names','lon','lat' calls data frame columns ind_idx,time_idx,call_type, time calls_icons vector length equal number call types specifying icons used displaying calls","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"Creates saves kml specified output_file_path can loaded Google Earth view animated trajectories","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":"additional-details-on-icon-and-line-color-specification","dir":"Reference","previous_headings":"","what":"Additional details on icon and line color specification","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"can specify icons giving vector filenames (character strings) pointing images computer (e.g. png works). Icons contained folder KMLs output, Google Earth Pro able read load KMLs. argument set NULL, code instead use built-blue markers Google Earth. However, unfortunately ugly. can specify colors lines using hex format first two digits give transparency (ff = fully opaque) last 6 digits give color RGB. Unlike R, '#' used color, transparency goes first rather last. example 'ffff0000' specifies opaque red.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/create_trajectories_kml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a KML that shows animal trajectories (viewable on Google Earth Pro) — create_trajectories_kml","text":"Ariana Strandburg-Peshkin YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/generate_movement_and_calls_visualization.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — generate_movement_and_calls_visualization","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — generate_movement_and_calls_visualization","text":"Plot individual behavior calls time period specified user. Also include summary behavior rest group.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/generate_movement_and_calls_visualization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — generate_movement_and_calls_visualization","text":"","code":"generate_movement_and_calls_visualization(   xs = NULL,   ys = NULL,   timestamps = NULL,   calls = NULL,   start_time = NULL,   end_time = NULL,   time_step = 1,   output_dir = NULL,   tail_time = 10,   call_persist_time = 5,   colors_inds = NULL,   colors_calls = NULL,   pchs_inds = NULL,   pchs_calls = NULL,   show_legend_inds = T,   show_legend_calls = T,   legend_loc = \"topright\",   show_time = T,   show_scalebar = T,   scalebar_size = 100,   scalebar_loc = \"bottomleft\",   scalebar_offset = 20,   ind_names = NULL,   bg_color = \"black\",   ind_point_size = NULL,   call_point_size = NULL,   events = NULL,   highlighted_radius = 1000 )"},{"path":"https://livingingroups.github.io/cocomo/reference/generate_movement_and_calls_visualization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — generate_movement_and_calls_visualization","text":"xs matrix dimensions n_inds x n_times xs[,t] gives x position (numeric) individual time step t ys matrix dimensions n_inds x n_times xs[,t] gives x position (numeric) individual time step t timestamps vector timestamps (POSIXct), must dimensions columns xs ys matrices calls data frame first column ('ind_idx') specifies index individual gave call, second column ('time_idx') specifies time index call given, third column ('call_type') specifies type call (character string) start_time time index start video end_time time index end video time_step time step use (image every time_step timesteps produced) output_dir directory store folder outputted images tail_time number previous time steps plot \"tail\" trails point showing current location call_persist_time number previous time steps still show calls (shrink linearly time size) colors_inds vector colors use individual (length n_inds) colors_calls vector colors use call type (alphabetical order call_type) pchs_inds vector plotting symbols individuals pchs_calls vector plotting symbols calls show_legend_inds whether plot legend showing names individuals (T F) show_legend_calls whether plot legend showing names call types (T F) legend_loc location legend, either topleft','topright','bottomleft' 'bottomright' show_time whether show timestamp (T F) show_scalebar whether show scalebar (T F) scalebar_size number meters scalebar scalebar_loc location scale bar, either topleft','topright','bottomleft' 'bottomright' scalebar_offset scalebar offset edge (fraction entire width) ind_names vector names individuals bg_color background color ind_point_size size individual points call_point_size size points calls events data frame columns event_id, start_time_idx,end_time_idx,initiator highlighted_radius radius highlighted location (usually epicenter hyena whoop analysis)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/generate_movement_and_calls_visualization.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — generate_movement_and_calls_visualization","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_angle_between_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get angle between vectors in radians or degrees — get_angle_between_vectors","title":"Get angle between vectors in radians or degrees — get_angle_between_vectors","text":"Get angle two vectors specified end points using law cosines. Vector 1 defined vector pointing point (x1_i, y1_i) (x1_f, y1_f) vector 2 defined vector point point (x2_i, y2_i) (x2_f, y2_f). angle defined angle produced two vectors joined initial endpoints (rather head--tail). resulting angle always positive.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_angle_between_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get angle between vectors in radians or degrees — get_angle_between_vectors","text":"","code":"get_angle_between_vectors(   x1_i,   y1_i,   x1_f,   y1_f,   x2_i,   y2_i,   x2_f,   y2_f,   degrees = F )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_angle_between_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get angle between vectors in radians or degrees — get_angle_between_vectors","text":"x1_i x coordinate initial point vector 1 y1_i y coordinate initial point vector 1 x1_f x coordinate final point vector 1 y1_f y coordinate final point vector 1 x2_i x coordinate initial point vector 2 y2_i y coordinate initial point vector 2 x2_f x coordinate final point vector 2 y2_f y coordinate final point vector 2 degrees T, angle returned degrees (otherwise returned radians)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_angle_between_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get angle between vectors in radians or degrees — get_angle_between_vectors","text":"Returns angle two specified vectors","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_angle_between_vectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get angle between vectors in radians or degrees — get_angle_between_vectors","text":"Ariana Strandburg-Peshkin YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":null,"dir":"Reference","previous_headings":"","what":"Get directedness — get_directedness","title":"Get directedness — get_directedness","text":"Gets directedness trajectory given time window, function time.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get directedness — get_directedness","text":"","code":"get_directedness(x_i, y_i, t_window)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get directedness — get_directedness","text":"x_i vector x positions individual (group centroid) length n_times y_i vector y positions individual (group centroid) length n_times t_window window time use computing directedness (must even number) - directedness time t computed using position data t - t_window / 2 t + t_window / 2","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get directedness — get_directedness","text":"vector directedness trajectory function time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get directedness — get_directedness","text":"directedness number ranges 0 1 1 straight path 0 highly tortuous path. defined net displacement (distance along straight-line path point point B) divided path length (total distance traveled along actual path point point B). NOTE: Keep mind time window t_window given number time points data use computing directedness, unit number timesteps, seconds.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_directedness.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get directedness — get_directedness","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get group centroid — get_group_centroid","title":"Get group centroid — get_group_centroid","text":"Get group's centroid (mean x y position) time. specified, compute least min_inds_tracked tracked given time step.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get group centroid — get_group_centroid","text":"","code":"get_group_centroid(xs, ys, min_inds_tracked = NULL)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get group centroid — get_group_centroid","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time min_inds_tracked specified, sets minimum number individuals must tracked moment time compute centroid (otherwise centroid NA time point","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get group centroid — get_group_centroid","text":"Returns list containing coordinates group centroid time, x_centr y_centr (vectors length n_times)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_centroid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get group centroid — get_group_centroid","text":"Ariana Strandburg-Peshkin (primary author) Reviewed Brock","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_dyadic_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get group dyadic distances — get_group_dyadic_distances","title":"Get group dyadic distances — get_group_dyadic_distances","text":"Computes distance pair individuals time.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_dyadic_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get group dyadic distances — get_group_dyadic_distances","text":"","code":"get_group_dyadic_distances(xs, ys)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_dyadic_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get group dyadic distances — get_group_dyadic_distances","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_dyadic_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get group dyadic distances — get_group_dyadic_distances","text":"N x N x n_times dyad_dists array giving dyadic distance pairs individuals time step dyad_dists[,j,t] gives distance individuals j time t","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_dyadic_distances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get group dyadic distances — get_group_dyadic_distances","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_elongation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get group polarization — get_group_elongation","title":"Get group polarization — get_group_elongation","text":"Computes elongation group time step t well long axis vector. elongation measure \"line-link\" vs \"circle-like\" group , ranging 0 (completely circular) 1 (completely elongated) elongation defined first performing PCA x/y data group. axis greatest variation defined 'long axis' axis perpendicular defined 'short axis'. elonation defined 1 - (length short axis / length long axis).","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_elongation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get group polarization — get_group_elongation","text":"","code":"get_group_elongation(xs, ys, min_inds_tracked = 3)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_elongation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get group polarization — get_group_elongation","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time min_inds_tracked specified, sets minimum number individuals must tracked moment time compute elongation (otherwise elongation NA time point). Default 3 (, elongation generally undefined)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_elongation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get group polarization — get_group_elongation","text":"Returns list containing: $elongation: vector length n_times giving elongation group time $long_axis_angle: vector length n_times giving angle long axis time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_elongation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get group polarization — get_group_elongation","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_heading_and_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get group heading — get_group_heading_and_speed","title":"Get group heading — get_group_heading_and_speed","text":"Computes group centroid heading time using either temporal spatial headings, going either forward (future) backward (past) computing heading","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_heading_and_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get group heading — get_group_heading_and_speed","text":"","code":"get_group_heading_and_speed(   xs,   ys,   heading_type,   spatial_R = NULL,   t_window = NULL,   forward = T,   min_inds_tracked = NULL,   seconds_per_time_step = 1 )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_heading_and_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get group heading — get_group_heading_and_speed","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time heading_type character string specifying heading type - 'spatial' 'temporal' spatial_R radius use spatial headings (heading_type = 'spatial') t_window temporal window use temporal headings (heading_type = 'temporal') forward whether compute headings future (forward = T) past (forward = F) min_inds_tracked specified, sets minimum number individuals must tracked use time point computing heading. headings, speeds, dt rely data insufficient number individuals reported NA. seconds_per_time_step number seconds corresponding time step","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_heading_and_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get group heading — get_group_heading_and_speed","text":"Returns group heading time, vector length n_times","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_heading_and_speed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get group heading — get_group_heading_and_speed","text":"Ariana Strandburg-Peshkin (primary author) Reviewed Brock","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_polarization.html","id":null,"dir":"Reference","previous_headings":"","what":"Get group polarization — get_group_polarization","title":"Get group polarization — get_group_polarization","text":"Computes polarization group time step t. polarization measure aligned group , ranging 0 (completely unaligned) 1 (completely aligned) polarization defined adding (vector addition) heading vectors individuals given moment time, taking length resultant vector, dividing number individuals. Either spatial temporal headings can used.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_polarization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get group polarization — get_group_polarization","text":"","code":"get_group_polarization(   xs,   ys,   heading_type,   spatial_R = NULL,   t_window = NULL,   forward = T,   min_inds_tracked = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_polarization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get group polarization — get_group_polarization","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time heading_type character string specifying heading type - 'spatial' 'temporal' spatial_R radius use spatial headings (heading_type = 'spatial') t_window temporal window use temporal headings (heading_type = 'temporal') forward whether compute headings future (forward = T) past (forward = F) min_inds_tracked specified, sets minimum number individuals must tracked moment time compute headings (otherwise polarization NA time point","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_polarization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get group polarization — get_group_polarization","text":"Returns vector length n_times giving polarization group time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_group_polarization.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get group polarization — get_group_polarization","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","title":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","text":"Gets spatially discretized heading given individual trajectory defined unit vector pointing individual's current location time t location mas moved distance least R.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","text":"","code":"get_heading_and_speed_spatial(   x_i,   y_i,   R,   t_idxs = 1:length(x_i),   forward = T,   seconds_per_time_step = 1 )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","text":"x_i vector x coordinates trajectory y_i vector y coordinates trajectory R radius used compute headings t_idxs time indexes compute headings, speed, dts (defaults entire trajectory) forward whether go forward time current position (T), backward (F) computing headings seconds_per_time_step number seconds corresponding time step","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","text":"Returns list containing $heads: time series heading individual (vector length x_i y_i), radians, computed based spatial discretization around time point $speeds: time series average speed individual first point outside radius R current point $dts: time differences current point first point outside radius R (either forward backward time) vector spatially discretized headings, computed times times t_idxs specified (times filled NAs)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get spatially discretized heading and speed over time — get_heading_and_speed_spatial","text":"Ariana Strandburg-Peshkin (primary author) Reviewed Brock","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_temporal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","title":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","text":"Gets headings speeds individual time given trajectory. Uses temporal window t_window (units timesteps) compute headings speeds, can compute based future movement (forward = T) past movement (forward = F). Headings defined x_head = dx / (dx^2 + dy^2) y_head = dy / (dx^2 + dy^2) , dx[t] = x_i[t + t_window] - x_i[t] dy[t] = y_i[t + t_window] - y_i[t] forward = T dx[t] = x_i[t] - x_i[t - t_window] dy[t] = y_i[t] - y_i[t - t_window] forward = F Speeds defined speed = sqrt(dx^2 + dy^2) / t_window.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_temporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","text":"","code":"get_heading_and_speed_temporal(   x_i,   y_i,   t_window = 1,   forward = T,   seconds_per_time_step = 1 )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_temporal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","text":"x_i x coordinates individual (vector whose length number timesteps) group centroid y_i y coordinates individual (vector whose length number timesteps) group centroid t_window time window compute speed (number time steps future past) forward boolean value (defaults T) indicating whether compute speeds forward time (T) backward time (F) seconds_per_time_step number seconds corresponding time step","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_temporal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","text":"Returns list containing $heads: time series heading individual (vector length x_i y_i), radians, $speeds: time series speed individual time point, $dts: time differences point (value, given vector compatibility spatial headings function)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_heading_and_speed_temporal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get heading and speed over time (temporal) — get_heading_and_speed_temporal","text":"Ariana Strandburg-Peshkin Reviewed Brock","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_local_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Get local density — get_local_density","title":"Get local density — get_local_density","text":"Gets number individuals within radius R focal individual time point","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_local_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get local density — get_local_density","text":"","code":"get_local_density(xs, ys, i, R)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_local_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get local density — get_local_density","text":"xs N x n_times matrix giving x positions N individuals n_times timesteps ys N x n.times matrix giving y positions N individuals n_times timesteps focal individual (local density computed) R radius compute local density (units xs ys)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_local_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get local density — get_local_density","text":"Vector length n_times giving local density around focal individual (number individuals within radius R) time point","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_local_density.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get local density — get_local_density","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_nearest_neighbor_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nearest neighbor distance — get_nearest_neighbor_distance","title":"Get nearest neighbor distance — get_nearest_neighbor_distance","text":"Gets distance individual 's nearest neighbor time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_nearest_neighbor_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nearest neighbor distance — get_nearest_neighbor_distance","text":"","code":"get_nearest_neighbor_distance(xs, ys, i)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_nearest_neighbor_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nearest neighbor distance — get_nearest_neighbor_distance","text":"xs N x n_times matrix giving x positions (UTM eastings) N individuals n_times timesteps ys N x n_times matrix giving y positions (UTM northings) N individuals n_times timesteps index focal individual (whose nearest neighbor distance computed)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_nearest_neighbor_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nearest neighbor distance — get_nearest_neighbor_distance","text":"Returns vector nearest neighbor distances time point (length = n_times)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_nearest_neighbor_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get nearest neighbor distance — get_nearest_neighbor_distance","text":"Ariana Strandburg-Peshkin YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Get positions relative to group — get_position_relative_to_group","title":"Get positions relative to group — get_position_relative_to_group","text":"Get individual position relative group centroid heading individuals.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get positions relative to group — get_position_relative_to_group","text":"","code":"get_position_relative_to_group(   xs,   ys,   heading_type,   spatial_R = NULL,   t_window = NULL,   forward = T,   min_inds_tracked = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get positions relative to group — get_position_relative_to_group","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time heading_type character string specifying heading type - 'spatial' 'temporal' spatial_R radius use spatial headings (heading_type = 'spatial') t_window temporal window use temporal headings (heading_type = 'temporal') forward whether compute headings future (forward = T) past (forward = F) min_inds_tracked specified, sets minimum number individuals must tracked moment time compute heading (otherwise positions NA time point)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get positions relative to group — get_position_relative_to_group","text":"Returns list containing rel_xs rel_ys matrices individual's position relative group centroid heading","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get positions relative to group — get_position_relative_to_group","text":"group centroid defined origin (0,0) heading points along positive x axis. heading can computed either using specified time window using spatial discretization.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_position_relative_to_group.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get positions relative to group — get_position_relative_to_group","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pulls and anchors — get_pulls_and_anchors","title":"Get pulls and anchors — get_pulls_and_anchors","text":"Get successful ('pull') failed ('anchor') dyadic interactions individuals b.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pulls and anchors — get_pulls_and_anchors","text":"","code":"get_pulls_and_anchors(   xa,   xb,   ya,   yb,   a,   b,   noise_thresh = 5,   plot_results = F,   include_initial_fusion = F,   include_final_fission = F )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pulls and anchors — get_pulls_and_anchors","text":"xa x coordinates individual (vector length n_times)- must continuous data (NAs) xb x coordinates individual b (vector length n_times)- must continuous data (NAs) ya x coordinates individual (vector length n_times)- must continuous data (NAs) yb x coordinates individual b (vector length n_times)- must continuous data (NAs) index first individual b index second individual noise_thresh noise threshold (defaults 5 m) plot_results whether plot results include_initial_fusion T, function also output initial fusion event. use cases, set false. See details. include_final_fission T, funciton also output final fission event. use cases, set false. See details.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pulls and anchors — get_pulls_and_anchors","text":"Returns data frame  containing dyadic interactions b. Contains columns: t1, t2, t3, initiator, responder, type, disparity, strength,disparity_additive, strength_additive. disparity strength defined Strandburg-Peshkin et al. 2015, whereas disparity_additive strength_additive alternative formulations metrics add components together instead multiplying .","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":"details-on-fission-and-fusion-events","dir":"Reference","previous_headings":"","what":"Details on fission and fusion events","title":"Get pulls and anchors — get_pulls_and_anchors","text":"include_initial_fusion set T, script also return \"fusion\" defined beginning sequence first minimum. include_final_fission set T, script also return \"fission\" defined last minimum end sequence. first last min/max values minima, half events returned . purpose option code used sequence two individuals come together split apart (fission-fusion analyses), first last \"half events\" represent fusion fission events, extracted. normal use cases, value set F (default). However cases analysis run \"together periods\" two individuals fission-fusion analysis, values can set T return times initiators initial fusion eventual fission event. case fission fusion events, two time points return (t1 t2). t3 defined NA. initiator defined individual greater displacement period t1 t2 responder individual. strength disparity defined parallel pulls anchors, using one time period (t1 t2). make values somewhat comparable pulls anchors, values squared.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get pulls and anchors — get_pulls_and_anchors","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"Create list time blocks using NAs dataset seperation points, run get_pulls_and_anchors function blocks separately.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"","code":"get_pulls_and_anchors_with_NA(   xa,   xb,   ya,   yb,   a,   b,   noise_thresh = 5,   plot_results = F,   include_initial_fusion = F,   include_final_fission = F,   NA_tolerance = 0,   min_time = NULL,   verbose = FALSE )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"xa x coordinates individual (vector length n_times) xb x coordinates individual b (vector length n_times) ya x coordinates individual (vector length n_times) yb x coordinates individual b (vector length n_times) index first individual b index second individual noise_thresh see documentation get_pulls_and_anchors function plot_results see documentation get_pulls_and_anchors function include_initial_fusion see documentation get_pulls_and_anchors function include_final_fission see documentation get_pulls_and_anchors function NA_tolerance big gap vector (missing timesteps), created NAs, tolerated therefore still combined single continuous dataset (numeric, positive integer) min_time minimum length (timesteps) resulting time block still used analysis (numeric, positive integer) verbose verbose = TRUE, print size NA gap following parameters information, see documentation get_pulls_and_anchors function:","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"Returns data frame  containing dyadic interactions b. Contains columns: t1, t2, t3, initiator, responder, type, disparity, strength,disparity_additive, strength_additive.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"Time blocks created splitting dataset indexes NAs. length NA-chain \"NA_tolerance\", script ignore NAs split position. Instead, script fill gap interpolation values previous next existing measured value entry. results datapoints staying connected/single time block small breaks. NA-chain dataset longer \"NA_tolerance\", values chain split separate time blocks. \"min_time\" != NULL, script remove time blocks shorter specified value (usually time steps), resulting time blocks relevant lengths. filtering \"min_time\" leaves time blocks analyze, script return \"NULL\". Note either include_initial_fusion include_final_fission true, function treat time block separately. words, fission /fusion might detected time block.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_pulls_and_anchors_with_NA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper for get_pulls_and_anchors function, handling datasets with NAs — get_pulls_and_anchors_with_NA","text":"Dario Walser YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"Gets spatially discretized trajectories temporally discretized trajectories, using certain \"ruler length\" R.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"","code":"get_spatially_discretized_trajectories(xs, ys, R, breaks = NULL, verbose = T)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time R radius (ruler length) used spatial discretization breaks vector indexes breaks data (e.g. breaks days) verbose whether print progress running","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"Returns list containing spat_ts (time points associated point along spatially discretized trajectory), spat_xs (x coordinates point along spatially discretized trajectory), spat_ys (y coordinates point along spatially discretized trajectory), spat_breaks (indexes starts breaks new spatially discretized data), R (radius used)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"TODO: Code deal well strings NAs within - look .","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_spatially_discretized_trajectories.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get spatially discretized trajectories — get_spatially_discretized_trajectories","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get speed — get_speed","title":"Get speed — get_speed","text":"Gets individual's speed time, using specified time step compute speed","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get speed — get_speed","text":"","code":"get_speed(x_i, y_i, seconds_per_timestep, t_window = 1, forward = T)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get speed — get_speed","text":"x_i x coordinates individual (vector whose length number timesteps) group centroid y_i y coordinates individual (vector whose length number timesteps) group centroid seconds_per_timestep number seconds timestamps (e.g. data recorded 1 Hz, value 1, data recorded every 30 sec, value 30) t_window time window compute speed (number time steps future past) forward boolean value (defaults T) indicating whether compute speeds forward time (T) backward time (F)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get speed — get_speed","text":"Returns speeds: time series speed individual (vector length x_i y_i)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get speed — get_speed","text":"speed computed speeds[t] = sqrt ( (x_i[t+t_window] - x_i[t] )^2 + ( y_i[t+t_window] - y_i[t] )^2 ) / (seconds_per_timestep * t_window) Note default speeds[t] gives instantaneous speed time t time t + t_window, .e. speeds computed based future past. forward set F, speeds computed based past, : speeds[t] = sqrt ( (x_i[t] - x_i[t-t_window] )^2 + ( y_i[t] - y_i[t-t_window] )^2 ) / (seconds_per_timestep * t_window)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_speed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get speed — get_speed","text":"Ariana Strandburg-Peshkin Reviewed Brock","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_together_sticky.html","id":null,"dir":"Reference","previous_headings":"","what":"Get whether two individuals are together, using a ","title":"Get whether two individuals are together, using a ","text":"Get whether two individuals together, using \"sticky\" definition","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_together_sticky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get whether two individuals are together, using a ","text":"","code":"get_together_sticky(together_inner, together_outer)"},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":null,"dir":"Reference","previous_headings":"","what":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"Get simplified turn speed influence (movement positional) pairs individuals j, , centroid = T individuals group centroid excluding .","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"","code":"get_turn_and_speed_influence_simplified(   xs,   ys,   heading_type,   centroid = F,   breaks = NULL,   spatial_R = NULL,   t_window = NULL,   min_percentile = 0.5,   seconds_per_time_step = 1,   symmetrize_lr = T,   max_distance = NULL,   min_past_speed = NULL,   min_left_speed = NULL,   min_right_speed = NULL,   min_left_pos = NULL,   min_right_pos = NULL,   min_faster_speed_diff = NULL,   min_slower_speed_diff = NULL,   min_front_pos = NULL,   min_back_pos = NULL,   verbose = T,   output_details = T )"},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"xs N x n_times matrix giving x coordinates individual time ys N x n_times matrix giving y coordinates individual time heading_type character string specifying heading type - 'spatial' 'temporal' centroid whether use group centroid (centroid = T) instead computing influence dyad (centroid = F) breaks vector indexes breaks data (e.g. breaks days) spatial_R radius use spatial headings (heading_type = 'spatial') t_window temporal window use temporal headings (heading_type = 'temporal') min_percentile minimum percentile use left / right relative speed distance seconds_per_time_step number seconds corresponding time step symmetrize_lr whether symmetrize thresholds right left movement + position (default T) max_distance optional maximum distance pair individuals, individual centroid, include given time point influence calculations min_past_speed optional minimum previous speed either group centroid (centroid = T) 'follower' (centroid = F) include data computation - can used subset times individual group already moving min_left_speed minimum speed moving left include data (positive value) min_right_speed minimum speed moving right include data (positive value) min_left_pos minimum distance left j include data (positive value) min_right_pos minimum distance right j include data (positive value) min_faster_speed_diff minimum speed difference j going faster include data (positive value) min_slower_speed_diff minimum speed difference j going slower include data (positive value) min_front_pos minimum position toward front front j include data (positive value) min_back_pos minimum position toward back back j include data (positive value) verbose whether print progress (T) output_details whether output computed matrices arrays used influence computations (T)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"Returns list containing matrices 4 different types influence, well computed metrics (output_details = T). See \"Additional information returned objects\" section list outputs.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"simplified movement turn influence individual individual j (turn_influence_movement[,j]) defined probability j turns right future given moved right relative j's past heading speed threshold value min_right_speed, j turns left future given moved left relative j's past heading speed threshold value min_left_speed. simplified positional turn influence individual individual j (turn_influence_position[,j]) defined probability j turns right future given located least min_right_dist meters right individual j relative j's current position heading, j turns left future given located least min_left_dist meters left individual j relative j's current position heading. simplified movement speed influence individual individual j (speed_influence_movement[,j]) defined probability j speeds future along vector defined j's heading past, given moving least speed min_faster_speed_diff faster j along j's past heading direction, slows along vector defined j's heading past given j moving least speed min_slower_speed_diff slower along vector past. simplified positional speed influence individual individual j (speed_influence_position[,j]) defined probability j speeds future along vector defined j's heading past given front j least min_front_pos meters relative j's current position past heading, j slows future along vector defined j's heading past given behind j least min_back_pos relative j's current position past heading. Future headings speeds computed either using fixed temporal window t_window forward time (heading_type = 'temporal') based spatial discretization radius spatial_R (heading_type = 'spatial'), .e. defining heading based focal individual moved distance spatial_R current location. Similarly, past headings speeds computed looking backward time either fixed temporal window (t_window) based fixed displacement distance (spatial_R). parameters specifying minimum speeds distances left-right front-back either set manually (recommended) , min_percentile specified, based percentiles relevant distributions variables across dyads (across individuals relative group centroid, centroid = T). variable min_percentile overrides manually set minimum speeds / distances. minimum speeds (distances) computed follows. First, split distribution relative left-right speeds (example) across dyads greater less 0. Take absolute value speeds define positive speed directions. Next, compute quantile min_percentile distribution (left right) separately. Finally, set min_left_speed min_right_speed computed values. symmetrize_lr = T (recommended), take instead mean value quantiles distributions use thresholds (result using relative speed going right left threshold - otherwise different symmetrize_lr = F) procedure done left-right positions, front-back relative speeds, front-back positions, using value min_percentile. case speeds, symmetrization done speed differences front-back distances expected symmetrical. breaks set, headings go across breaks data specified vector included computations. max_distance set, compute scores based times distance given pair individuals () individual group centroid) less max_distance. default max_distance = NULL filtering done. min_past_speed set, compute scores based times follower individual (centroid, centroid = T) initially moving minimum past speed. default, min_past_speed = NULL filtering done.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"additional-information-about-returned-objects","dir":"Reference","previous_headings":"","what":"Additional information about returned objects","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"output list conatins following objects: params list parameters used calculation (see input variables descriptions) turn_influence_movement: x j matrix representing movement turn influence individual individual j turn_influence_position: x j matrix representing positional turn influence individual individual j speed_influence_movement: x j matrix representing movement speed influence individual individual j speed_influence_position: x j matrix representing positions speed influence individual individual j centroid = T, everything instead computed centroid level (centroid follower, replacing individual j). case, output matrices still shape dyadic case, NAs columns except j=1 (representing influence individual centroid excluding individual). parallel structure compatibility dyadic centroid-based analyses. output_details = T, additional parameters following computed matrices / arrays also outputted: lr_speed: x j x t array past left-right speed individual relative past heading individual j time t lr_pos: x j x t array past left-right position individual relative current position past heading individual j time t fb_speed: x j x t array past front-back speed difference individual individual j along vector past heading individual j time t fb_pos: x j x t array past front-back position individual relative current position past heading individual j time t turn_angle: j x t matrix turning angle individual j past future time t speed_up: j x t matrix difference speed individual j future past time t, project along j's past heading output matrices turn_angle[j,t] speed_up[j,t] represent centroid excluding individual j, rather data individual j dyadic case. Similarly, output arrays dimensions x j x t NAs values j > 1, j = 1 values represent speeds / positions individuals relative centroid (excluding )","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/get_turn_and_speed_influence_simplified.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get simplified turn and speed influence — get_turn_and_speed_influence_simplified","text":"Ariana Strandburg-Peshkin (primary author) Jack Winans (code reviewer, 15 August 2024)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"Detects splits merges (.k.. fissions fusions) using \"sticky-DBSCAN\" method Libera et al. 2023.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"","code":"identify_splits_and_merges(   xs,   ys,   timestamps,   R_inner,   R_outer,   breaks = c(1, length(timestamps) + 1),   names = NULL,   break_by_day = F )"},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"xs UTM eastings matrix (n_inds x n_times matrix xs[,t] gives easting individual time step t) ys UTM northings matrix (n_inds x n_times matrix ys[,t] gives northing individual time step t) timestamps vector timestamps (POSIXct), must dimensions columns xs ys matrices R_inner inner distance threshold identify periods connectedness (numeric) R_outer outer distance threshold identify periods connectedness (numeric) breaks indexes breaks data (default NULL treats data contiguous sequence). specified, overrides break_by_day names optional vector names (NULL, defined .character(1:n_inds)) break_by_day whether break data date (T F)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"list containing: events_detected: data frame info detected fissions fusions, limited info shuffles all_events_info: list information fission-fusion (shuffle) events. groups_list: list subgroups timestep together: n_inds x n_inds x n_times array whether dyads connected (1) (0) unknown (NA) R_inner: inner radius used computations (R_inner ) R_outer: outer radius used computations (R_outer )","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"Start defining adjacency matrix (together code) dyads \"connected\" moment time. Dyads considered connected go within distance R_inner one another, continue connected leave distance R_outer one another ends () period distance dropped R_inner. double threshold makes periods connectedness stable removing \"flicker\" result single threshold. NA handling: Individuals considered together either positions known. period connectedness runs NA, individuals considered connected NA. connectedness dyads determined, merge dyads together groups using DBSCAN 1 - together distance matrix, eps equal something small (.01 code). Store groups groups_list, list lists whose length equal n_times. Stepping groups_list, identify changes group membership, .e. consecutive time points groups match. algorithm flags change, including instances individuals disappear reappear groups due missing data (later ignored). Store changes data frame. last step, identify splits ('fission'), merges ('fusion'), things classified either fissions fusions contain elements ('shuffle'). done constructing bipartite network time step t, groups time t connected groups time t + 1 share least 1 member. , identify connected components bipartite network. Components single group (node) time t connected multiple groups (nodes) time t + 1 get identified classified event_type = 'fission'. Components multiple nodes time t connected single node time t + 1 classified event_type = 'fusion'. Components single node time t connected single node time t + 1 skipped (fissions, fusions, shuffles). events complex things happen classified event_type = 'shuffle'. events identified, various event features computed saved data frame. See list outputs details.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"additional-information-about-returned-objects","dir":"Reference","previous_headings":"","what":"Additional information about returned objects","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"events_detected data frame: events_detected$event_idx: unique id number event events_detected$tidx: (initial) time index event events_detected$event_type: \"fission\" \"fusion\" \"shuffle\" events_detected$n_groups_before: number groups prior event events_detected$n_groups_after: number groups event events_detected$big_group_idxs: indexes individuals involved event events_detected$big_group: names individuals involved event events_detected$group_A_idxs, $group_B_idxs, $group_C_idxs, etc.: individual idxs subgroup members events_detected$group_A, $group_B, $group_C, etc.: names subgroup members events_detected$n_A, $n_B, $n_C etc.: number individuals subgroup events_detected$n_big_group: number individuals big group (original group fissions, subseq group fusions) (NOTE: big_group_idxs, big_group, group_A_idxs etc., group_A etc. n_A etc. n_big_group set NA shuffles... can get detailed info shuffles all_events_info object)) all_events_info list: all_events_info[[]] contains following info event : all_events_info[[]]$t: time index event all_events_info[[]]$groups_before: (list lists) list groups event (time t) all_events_info[[]]$groups_after: (list lists) list groups event (time t + 1) all_events_info[[]]event_type: 'fission', 'fusion', 'shuffle' (character string) all_events_info[[]]$n_groups_before: number groups event all_events_info[[]]$n_groups_after: number groups event groups_list list: groups_list[[t]] gives list subgroups time t groups_list[[t]][[1]] gives vector first subgroup, etc.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/identify_splits_and_merges.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify group splits and merges from multi-individual trajectory data — identify_splits_and_merges","text":"Ariana Strandburg-Peshkin (primary author) Eli Strauss (code reviewer, May 2024) Reviewed Brock (Jan 2025)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_axytrek_gps_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Axy-Trek GPS file — import_axytrek_gps_file","title":"Import Axy-Trek GPS file — import_axytrek_gps_file","text":"Imports GPS data Axy Trek file, may lines formatted read.delim can parse . Can currently handle files 2021-2023 least. Output data frame column names compatible function cocomo::reformat_movebank_to_matrix.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_axytrek_gps_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Axy-Trek GPS file — import_axytrek_gps_file","text":"","code":"import_axytrek_gps_file(input_file_path)"},{"path":"https://livingingroups.github.io/cocomo/reference/import_axytrek_gps_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Axy-Trek GPS file — import_axytrek_gps_file","text":"input_file_path full path input file","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_axytrek_gps_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Axy-Trek GPS file — import_axytrek_gps_file","text":"Returns data frame following columns: timestamp, location.lat, location.long, V4, V5, satellite.count, V7","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_axytrek_gps_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Axy-Trek GPS file — import_axytrek_gps_file","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_behavioral_seqs_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","title":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","text":"Imports behavioral sequence data set csv files converts matrix format matching xs ys matrices used cocomo library","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_behavioral_seqs_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","text":"","code":"import_behavioral_seqs_to_matrix(input_dirs, ids, timestamps)"},{"path":"https://livingingroups.github.io/cocomo/reference/import_behavioral_seqs_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","text":"input_dirs list input directories behavioral sequence data stored (full paths) ids data frame giving individual ids deployment timestamps vector timestamps associated deployment (UTC)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_behavioral_seqs_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","text":"Returns list containing $behavs, matrix $behavs[,t] gives behavior individual (correspoding row ids time t (corresponding index timestamps) matrix, behavior represented integer value (quicker processing). second item list, $behavs_key data frame columns behav (behavior string) int_value (correspoding integer value associated behavior $behavs matrix)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/import_behavioral_seqs_to_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import behavioral sequences (output from classifier) to matrix format — import_behavioral_seqs_to_matrix","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/latlon_to_utm.html","id":null,"dir":"Reference","previous_headings":"","what":"Latitude / longitude to UTM conversion — latlon_to_utm","title":"Latitude / longitude to UTM conversion — latlon_to_utm","text":"Converts matrix lons lats (lons first column, lats second column) UTM eastings northings (eastings first column, northings second column)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/latlon_to_utm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latitude / longitude to UTM conversion — latlon_to_utm","text":"","code":"latlon_to_utm(lons_lats, utm_zone, hemisphere)"},{"path":"https://livingingroups.github.io/cocomo/reference/latlon_to_utm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latitude / longitude to UTM conversion — latlon_to_utm","text":"lons_lats N x 2 matrix longitudes (col 1) latitudes (col2) utm_zone numeric string value UTM zone hemisphere northern southern hemisphere - specify 'N' 'S' (case sensitive)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/latlon_to_utm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Latitude / longitude to UTM conversion — latlon_to_utm","text":"easts_norths, N x 2 matrix eastings (col 1) northings (col 2)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/latlon_to_utm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Latitude / longitude to UTM conversion — latlon_to_utm","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_compare_gps_data_to_recording_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","title":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","text":"given round meerkat collaring, verifies whether GPS data expected present (based GROUPYEAR_MOV_SUMMARY.txt file METADATA) present xs ys matrices GROUPYEAR_xy_level0.RData.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_compare_gps_data_to_recording_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","text":"","code":"meerkat_compare_gps_data_to_recording_intervals(xy_file, metadata_file)"},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_compare_gps_data_to_recording_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","text":"xy_file path file xy level 0 data metadata_file path corresponding metadata file","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_compare_gps_data_to_recording_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","text":"Returns 0 metadata xy data match. Returns 1 otherwise prints discrepancies.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_compare_gps_data_to_recording_intervals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare recorded meerkat GPS data to recording intervals noted in metadata — meerkat_compare_gps_data_to_recording_intervals","text":"Ariana Strandburg-Peshkin YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_import_meerkat_gps_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import meerkat GPS data — meerkat_import_meerkat_gps_data","title":"Import meerkat GPS data — meerkat_import_meerkat_gps_data","text":"#Imports raw meerkat GPS data Technosmart files (Gipsy 5 Axy-Trek) assuming standardized file folder structure input_dir standardized naming schemes done meerkat group collaring project. Outputs file containing xs, ys, timestamps matrices well another file GPS data table Movebank format","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_import_meerkat_gps_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import meerkat GPS data — meerkat_import_meerkat_gps_data","text":"","code":"meerkat_import_meerkat_gps_data(   input_dir,   output_dir,   metadata_dir = \"~/EAS_shared/meerkat/working/METADATA/\",   tag_type,   start_date = NULL,   end_date = NULL,   start_time = NULL,   end_time = NULL,   min_satellites = 5,   utm_zone = 34,   hemisphere = \"south\",   seconds_per_time_step = 1,   timezone = \"UTC\" )"},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_import_meerkat_gps_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import meerkat GPS data — meerkat_import_meerkat_gps_data","text":"input_dir full path input directory files given deployment stored (e.g. \"~/EAS_shared/meerkat/archive/rawdata/meerkat_movecomm_2017/HM_2017_1/\") output_dir full path output directory processed files saved metadata_dir full path directory holding metadata files (GROUPYEAR_INDIVIDUAL_INFO.txt) tag_type 'gipsy5' 'axytrek' start_date character string specifying starting date data sampled daily basis, used data_chunks = NULL, format must 'YYYY-MM-DD' end_date character string specifying end date data sampled daily basis, used data_chunks = NULL, format must 'YYYY-MM-DD' start_time character string specifying start time data sampled daily basis, used data_chunks = NULL, format must 'HH:MM:SS' end_time character string specifying end time data sampled daily basis, used data_chunks = NULL, format must 'HH:MM:SS' min_satellites minimum number satellites include data utm_zone numeric UTM zone (needed output_utm = T movebank_data utm_easting utm_northing columns) hemisphere hemisphere ('north' 'south') UTM calculations (needed output_utm = T movebank_data utm_easting utm_northing columns) seconds_per_time_step sampling interval GPS fixes (seconds) timezone timezone use (UTC)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_import_meerkat_gps_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import meerkat GPS data — meerkat_import_meerkat_gps_data","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":null,"dir":"Reference","previous_headings":"","what":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"Reads label file (Audition format) synch file, gets synch points, synchs labels file UTC. Outputs table additional column specifying timestamp_UTC. Currently designed work meerkat data.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"","code":"meerkat_synch_audio_file_labels_to_UTC(   path_to_label_file,   path_to_synch_file = \"~/EAS_shared/meerkat/working/METADATA/total_synch_info.csv\",   path_to_rawdata_dir = \"~/EAS_shared/meerkat/archive/rawdata/\",   min_offset_outlier = 0.5,   min_n_synchs = 3,   min_frac_spanned_by_synchs = 0.2,   make_plot = T,   handle_special_cases = T,   quadratic_fit = F,   remove_noisy_synchs = T )"},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"path_to_label_file path label file Audition path_to_synch_file path synch file path_to_rawdata_dir path directory raw data stored (matching wav file names) min_offset_outlier minimum offset (seconds) fitted times labeled talking clock times considered outlier min_n_synchs minimum number synchs (excluding outliers) perform fit min_frac_spanned_by_synchs minimum fraction total file length (first last label time) spanned synch calls complete synching make_plot whether also output plot showing synchs time recording vs talking clock time, final fit outliers indicated handle_special_cases whether (T F) handle special cases synch info table, synch clock stopped two synch clocks around due group split rovers - cases hardcoded . parameter always set T meerkat data quadratic_fit whether (T F) perform quadratic fit synchs remove_noisy_synchs whether (T F) remove synchs labeled noisy (remove everything x, case sensitive)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"Returns list containing: filename: basename label file synch_completed: T F, whether synch completed successfully synch_completed == T, also output: labels_synched: data frame columns: $label_unique_id (unique id associated particular lable, constructed wav_file|label_name|t0_file|duration) $wav_file (raw wav file name, without file extension) $csv_file (csv label file name without file extension) $label_name (name label) $date (date format YYYYMMDD) $id_code (individual ID code, e.g. 'VCVM001') $t0_file (start time label marker file, seconds file) $duration (label marker duration, seconds) $t0_UTC (synched time label marker start UTC) $tmid_UTC (synched time label marker midpoint UTC) $tf_UTC (synched time label marker end UTC) synchs_used: data frame containing synch labels used fit, computed information outliers: data frame points labeled outliers well filenames, plus columns info synch_completed == F, also output: reason_no_synch: string explaining file synched","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"label file format Audition labels. Name column must contain labels form 'synch H:MM:SS' 'synch MM:SS' specify times synch calls heard talking clock.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/meerkat_synch_audio_file_labels_to_UTC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Synch labels within audio file to UTC time — meerkat_synch_audio_file_labels_to_UTC","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Adobe Audition formatted time — parse_audition_time","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"Parses time Start Duration column Audition label file seconds","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"","code":"parse_audition_time(audition_time_str)"},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"audition_time_str character string correspoding Audition-formatted time","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"Returns numeric value time file (seconds)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"Start Duration columns Adobe Audition label files non-standard format. Within first 10 minutes, formatted M:SS.SSS. 10 minutes formatted MM:SS.SSS first hour formatted H:MM:SS.SSS (presumably first 10 hours HH:MM:SS.SSS). function parses weird labels returns numeric value time file, seconds","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/parse_audition_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse Adobe Audition formatted time — parse_audition_time","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_behav_and_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — plot_behav_and_calls","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — plot_behav_and_calls","text":"Plot individual behavior calls time period specified user. Also include summary behavior rest group.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_behav_and_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — plot_behav_and_calls","text":"","code":"plot_behav_and_calls(   behavs,   calls_array,   behavs_key,   focal_ind,   t0,   tf,   nonfocal_calls_to_plot = NULL,   nonfocal_behavs_to_plot = NULL,   smooth_window = 31 )"},{"path":"https://livingingroups.github.io/cocomo/reference/plot_behav_and_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — plot_behav_and_calls","text":"behavs matrix dimensions n_inds x n_times behavs[,t] gives behavior (numeric) individual time step t calls_array array dimensions n_inds x n_times x n_calltypes calls_array[,t,c] indicates number calls type c given individual time step t behavs_key data frame behavior types columns behav (behavior string) int_value (integer value behavs matrix) focal_ind integer giving index focal individual t0 integer giving time step start tf integer giving time step stop nonfocal_calls_to_plot vector character strings indicating calls plot nonfocal individuals (must match call types calls_array 3rd dimension names) nonfocal_behavs_to_plot vector character strings indicating behaviors plot nonfocal individuals (must match behavior types behavs_key) smooth_window smoothing window indicating presence nonfocal calls (time steps) calls_to_plot vector character strings indicating call types plot (call types get lumped \"\" category) behavs_to_plot vector character strings indicating behavior types plot (behavior types get lumped \"\" category)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_behav_and_calls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot individual behavior and calls during a time period specified by the user. Also include a summary of the behavior of the rest of the group. — plot_behav_and_calls","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_network_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot network matrix — plot_network_matrix","title":"Plot network matrix — plot_network_matrix","text":"Plot matrix color representing edge weights network","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_network_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot network matrix — plot_network_matrix","text":"","code":"plot_network_matrix(   mat,   mat_col_palette = NULL,   ind_names = NULL,   ind_cols = NULL,   zlim = NULL,   xlab = \"\",   ylab = \"\",   main = \"\" )"},{"path":"https://livingingroups.github.io/cocomo/reference/plot_network_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot network matrix — plot_network_matrix","text":"mat matrix plot (matrix dimensions n_inds x n_inds) mat_col_palette color palette use matrix plot ind_names names x y labels (vector length n_inds) ind_cols colors use labels (vector length n_inds) zlim vector length 2 giving numerical limits z (color scale) xlab x axis label (rows matrix) ylab y axis label (columns matrix) main title plot","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_network_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot network matrix — plot_network_matrix","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_pull_or_anchor_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pull or anchor event — plot_pull_or_anchor_event","title":"Plot pull or anchor event — plot_pull_or_anchor_event","text":"Plots pull anchor event, initiator colored blue responder colored red. Panels show positions t1,t2, t3 respectively.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_pull_or_anchor_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pull or anchor event — plot_pull_or_anchor_event","text":"","code":"plot_pull_or_anchor_event(xs, ys, events, event_idx, ids = NULL)"},{"path":"https://livingingroups.github.io/cocomo/reference/plot_pull_or_anchor_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pull or anchor event — plot_pull_or_anchor_event","text":"xs n_inds x n_times matrix x positions ys n_inds x n_times matrix y positions events events table output get_pulls_and_anchors event_idx row table plot ids ids table output reformat_movebank_to_matrix","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_pull_or_anchor_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot pull or anchor event — plot_pull_or_anchor_event","text":"Returns plot event initiator blue responder red","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_pull_or_anchor_event.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot pull or anchor event — plot_pull_or_anchor_event","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"paired measurements (x,y), plot specified statistic stat (e.g. mean) y values x within bins specified vector bins","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"","code":"plot_y_conditioned_on_x(   x,   y,   bins = NULL,   stat = \"median\",   bin_by_quantile = T,   n_bins = 10,   error_bar_range = 0.25,   xlab = \"\",   ylab = \"\",   main = \"\",   xlim = NULL,   ylim = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"x vector numbers whose value conditioned y vector numbers statistic computed values associated x bin bins bins use (override bin_by_quantile n_bins specified) stat statistic distribution y use (can 'mean' 'median') bin_by_quantile specifies whether bin based quantiles overall distribution x (T F) n_bins number bins create bin_by_quantile = T (bins evenly spaced according quantiles) error_bar_range NULL, produce error bars spanning given quantile range distribution y bin. 0 0.5 (defaults 0.25, interquantile range) xlab label x axis ylab label y axis main main plot label xlim specified, sets limits x axis ylim specified, sets limits y axis","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"Creates plot, also outputs list bins (bins used), mids (midpoints x bins), y_stats (mean median y bin), y_uppers y_lowers (upper lower qauntiles y bin specified error_bar_range) ns (number data points bin)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"example, stat = 'mean', function plot vals[] vs. bins[] vals[] defined mean(y[(x >= bins[] & x < bins[+1])], na.rm=T)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/plot_y_conditioned_on_x.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a statistic of y conditioned on the value of x — plot_y_conditioned_on_x","text":"Ariana Strandburg-Peshkin YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"function takes level 0 dataset (uncleaned location data UTM coordinates) performs minimal pre-processing return level 1 dataset. See latlon_to_utm convert lat/lon UTM.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"","code":"preprocess_gps_level0_to_level1(   input_file_path = NULL,   output_file_path = NULL,   xs = NULL,   ys = NULL,   timestamps = NULL,   ids = NULL,   breaks = NULL,   remove_unrealistic_speeds = T,   remove_isolated_points = T,   remove_unrealistic_locations = T,   interpolate_small_gaps = T,   interpolate_stationary_periods = T,   max_speed_percentile = 0.9995,   max_speed = NULL,   max_sd_away = 10,   max_dist_percentile = 0.9999,   max_isolated_point_dist = 1000,   max_interp_len = 5,   max_move_dist = 5,   max_move_time = 5,   bounding_box = NULL,   verbose = T )"},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"input_file_path full path input file containing xs, ys, timestamps, ids (overrides manual passing parameters), must RData file output_file_path full path output file level 1 dataset stored, must end .RData xs n_inds x n_times matrix giving x coordinates (UTM eastings) individual time (input file specified, pass manually) ys n_inds x n_times matrix giving y coordinates (UTM northings) individual time (input file specified, pass manually) timestamps vector timestamps (input file specified, pass manually) ids data frame containing information individual (input file specified, pass manually) breaks vector giving indexes breaks data (e.g. gaps recording intervals), sequence continuous. breaks specify index associated beginning interval, starting 1 (first interval) remove_unrealistic_speeds whether remove unrealistic speeds (T F) remove_isolated_points whether remove isolated points (T F) remove_unrealistic_locations whether remove unrealistic locations (T F) interpolate_small_gaps whether interpolate small gaps (T F) interpolate_stationary_periods whether interpolate stationary periods (T F) - run unless interpolate_small_gaps also T max_speed_percentile quantile use define maximum speed max_speed maximum speed (overrides max_speed_percentile specified). value interpreted max allowable meters traveled one time step timesteps. max_sd_away standard deviation xs ys distributions individual beyond points removed max_dist_percentile quantile use define maximum x y coordinates points check isolation (outside isolated removed) max_isolated_point_dist maximum isolated point distance max_interp_len maximum length NA gap linearly interpolate (number time points) max_move_dist maximum distance moved time max_move_time considered stationary interpolation stationary periods (interpolated using average position) max_move_time maximum time gap interpolate stationary (number time points) bounding_box vector length 4 giving bounding box outside points removed - format c(min_easting, max_easting, min_northing, max_northing) verbose whether print progress information","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"Returns list containing new xs ys matrices, also saves plus timestamps ids objects output file specified","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"function performs following steps (order): remove_isolated_points = T, finds extreme distances > max_dist_percentile quantile (default 99.99%) < 1 - max_dist_percentile xs ys individual , points individual within max_isolated_point_dist (default 1000 m) point, replaces NAs remove_unrealistic_speeds = T, removes unrealistic speeds (greater max_speed_percentile) replaces NAs (default .9995 quantile, alternatively max speed max_speed can set manually). remove_unrealistic_locations = T, finds extreme xs ys mean + sd * max_sd_away (default 10) ind removes bounding_box != NULL, removes points outside specified bounding_box = c(min_easting, max_easting, min_northing, max_northing) interpolate_small_gaps = T, fills missing data gaps less length max_interp_len linear interpolation (default 5) interpolate_stationary_periods = T, finds instances animal move max_move_dist (default 5 m) NA gap < max_move_time (default 300 timesteps) replaces mean location individual start end sequence","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/preprocess_gps_level0_to_level1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Preprocess GPS data (in matrix format) from level 0 to level 1 — preprocess_gps_level0_to_level1","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_matrix_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from matrix format to dataframe — reformat_matrix_to_df","title":"Convert from matrix format to dataframe — reformat_matrix_to_df","text":"Creates dataframe GPS data \"matrix format\" suitable plotting ggplot","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_matrix_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from matrix format to dataframe — reformat_matrix_to_df","text":"","code":"reformat_matrix_to_df(   xs,   ys,   timestamps,   ids = NULL,   time_indices_selected,   id_codes_selected = NULL,   lats = NULL,   lons = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_matrix_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from matrix format to dataframe — reformat_matrix_to_df","text":"xs UTM eastings matrix (n_inds x n_times matrix xs[,t] gives easting individual time step t) ys UTM northings matrix (n_inds x n_times matrix ys[,t] gives northing individual time step t) timestamps vector timestamps (POSIXct), must dimensions columns xs ys matrices ids Dataframe individuals individual name stored column called id_code. necessary want select subset individuals using id_codes_selected time_indices_selected Time indices data include dataframe, matched xs, ys, timestamps id_codes_selected Identity codes individuals include dataframe. none provided, individuals included lats matrix latitude values (n_inds x n_times) lons matrix longitude values (n_inds x n_times)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_matrix_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from matrix format to dataframe — reformat_matrix_to_df","text":"Returns dataframe id_codes, xs, ys, timestamps","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_matrix_to_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert from matrix format to dataframe — reformat_matrix_to_df","text":"Eli Strauss YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_movebank_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","title":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","text":"Takes regularly sampled GPS data Movebank format (.e. data frame specified columns - see ) converts standard matrix form used cocomo package.","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_movebank_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","text":"","code":"reformat_movebank_to_matrix(   movebank_data,   output_file_path = NULL,   ids = NULL,   data_chunks = NULL,   seconds_per_time_step = 1,   start_date = NULL,   end_date = NULL,   start_time = NULL,   end_time = NULL,   utm_zone = NULL,   hemisphere = NULL,   output_utm = T,   output_latlon = T,   use_UTC = T,   local_timezone = NULL )"},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_movebank_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","text":"movebank_data data frame must include columns 'timestamp (timestamp UTC, must character string format YYYY-MM-DD HH:MM:SS.SSS), 'individual.local.identifier' (individual id tracked animals), 'location.long' (longitude coordinate), 'location.lat (latitude coordinate). Can optionally also include column 'study.local.timestamp' (local timestamp GPS fix, must character string format YYYY-MM-DD HH:MM:SS.SSS). output_file_path full path desired output file (must .RData file) ids optional ids data frame specified determine order rows matrices (code column ids needs match individual.local.identifier column movebank_data) data_chunks data frame columns start end specifying starting ending datetimes (POSIXct format - time zone!) contiguous chunk data. overrides specified start end times / dates. seconds_per_time_step sampling interval GPS fixes (seconds) start_date character string specifying starting date data sampled daily basis, used data_chunks = NULL, format must 'YYYY-MM-DD' end_date character string specifying end date data sampled daily basis, used data_chunks = NULL, format must 'YYYY-MM-DD' start_time character string specifying start time data sampled daily basis, used data_chunks = NULL, format must 'HH:MM:SS' end_time character string specifying end time data sampled daily basis, used data_chunks = NULL, format must 'HH:MM:SS' utm_zone numeric UTM zone (needed output_utm = T movebank_data utm_easting utm_northing columns) hemisphere hemisphere ('north' 'south') UTM calculations (needed output_utm = T movebank_data utm_easting utm_northing columns) output_utm whether output xs ys matrices (T F) output_latlon whether output lats lons matrices (T F) use_UTC T (default) use UTC time rather local time local_timezone specify local timezone string, using UTC (use_UTC = F)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_movebank_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","text":"Saves file location output_file_path containing objects: timestamps (vector timestamps POSIXct format, length n_times), ids (data frame containing either original ids data single code column id individual.local.identifier column movebank_data), xs (n_inds x n_times matrix UTM eastings individuals time point), ys (n_inds x n_times matrix UTM northings individuals time point), lons (n_inds x n_times matrix longitudes individuals time point), lats (n_inds x n_times matrix longitudes individuals time point). xs ys saved output_utm = T. lons lats saved output_lonlat = T","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/reformat_movebank_to_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reformat Movebank to matrix format — reformat_movebank_to_matrix","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/utm_to_latlon.html","id":null,"dir":"Reference","previous_headings":"","what":"UTM to latitude / longitude conversion — utm_to_latlon","title":"UTM to latitude / longitude conversion — utm_to_latlon","text":"Converts matrix UTM eastings northings (eastings first column, northings second column) matrix lons lats (lons first column, lats second column)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/utm_to_latlon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTM to latitude / longitude conversion — utm_to_latlon","text":"","code":"utm_to_latlon(easts_norths, utm_zone, hemisphere)"},{"path":"https://livingingroups.github.io/cocomo/reference/utm_to_latlon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTM to latitude / longitude conversion — utm_to_latlon","text":"easts_norths N x 2 matrix eastings (col 1) northings (col2) utm_zone numeric string value UTM zone hemisphere northern southern hemisphere - specify 'N' 'S' (case sensitive)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/utm_to_latlon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTM to latitude / longitude conversion — utm_to_latlon","text":"lons_lats, N x 2 matrix longitudes (col 1) latitudes (col 2)","code":""},{"path":"https://livingingroups.github.io/cocomo/reference/utm_to_latlon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"UTM to latitude / longitude conversion — utm_to_latlon","text":"Ariana Strandburg-Peshkin (primary author) YET CODE REVIEWED","code":""}]
